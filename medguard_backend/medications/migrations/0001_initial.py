# Generated by Django 5.2.4 on 2025-07-28 09:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MedicationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timing', models.CharField(choices=[('morning', 'Morning'), ('noon', 'Noon'), ('night', 'Night'), ('custom', 'Custom Time')], default='morning', help_text='When the medication should be taken', max_length=20)),
                ('custom_time', models.TimeField(blank=True, help_text='Custom time for medication (if timing is custom)', null=True)),
                ('dosage_amount', models.DecimalField(decimal_places=2, help_text='Amount of medication to take', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('frequency', models.CharField(default='daily', help_text='How often to take the medication (e.g., daily, twice daily, weekly)', max_length=50)),
                ('monday', models.BooleanField(default=True)),
                ('tuesday', models.BooleanField(default=True)),
                ('wednesday', models.BooleanField(default=True)),
                ('thursday', models.BooleanField(default=True)),
                ('friday', models.BooleanField(default=True)),
                ('saturday', models.BooleanField(default=True)),
                ('sunday', models.BooleanField(default=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now, help_text='Date when medication schedule starts')),
                ('end_date', models.DateField(blank=True, help_text='Date when medication schedule ends (optional)', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('paused', 'Paused'), ('completed', 'Completed')], default='active', help_text='Current status of the medication schedule', max_length=20)),
                ('instructions', models.TextField(blank=True, help_text='Special instructions for taking the medication')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Medication Schedule',
                'verbose_name_plural': 'Medication Schedules',
                'db_table': 'medication_schedules',
                'ordering': ['patient', 'timing', 'start_date'],
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('expiring_soon', 'Expiring Soon'), ('expired', 'Expired')], help_text='Type of stock alert', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Priority level of the alert', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', help_text='Current status of the alert', max_length=20)),
                ('title', models.CharField(help_text='Title of the alert', max_length=200)),
                ('message', models.TextField(help_text='Detailed message of the alert')),
                ('current_stock', models.PositiveIntegerField(help_text='Current stock level when alert was created')),
                ('threshold_level', models.PositiveIntegerField(help_text='Threshold level that triggered the alert')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When the alert was resolved', null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes about how the alert was resolved')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Stock Alert',
                'verbose_name_plural': 'Stock Alerts',
                'db_table': 'stock_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the medication', max_length=200)),
                ('generic_name', models.CharField(blank=True, help_text='Generic name of the medication', max_length=200)),
                ('brand_name', models.CharField(blank=True, help_text='Brand name of the medication', max_length=200)),
                ('medication_type', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('liquid', 'Liquid'), ('injection', 'Injection'), ('inhaler', 'Inhaler'), ('cream', 'Cream'), ('ointment', 'Ointment'), ('drops', 'Drops'), ('patch', 'Patch'), ('other', 'Other')], default='tablet', help_text='Type of medication', max_length=20)),
                ('prescription_type', models.CharField(choices=[('prescription', 'Prescription Required'), ('otc', 'Over the Counter'), ('supplement', 'Supplement')], default='prescription', help_text='Type of prescription required', max_length=20)),
                ('strength', models.CharField(help_text='Strength of the medication (e.g., 500mg, 10mg/ml)', max_length=50)),
                ('dosage_unit', models.CharField(help_text='Unit of dosage (e.g., mg, ml, mcg)', max_length=20)),
                ('pill_count', models.PositiveIntegerField(default=0, help_text='Current number of pills/units in stock')),
                ('low_stock_threshold', models.PositiveIntegerField(default=10, help_text='Threshold for low stock alerts')),
                ('description', models.TextField(blank=True, help_text='Description of the medication')),
                ('active_ingredients', models.TextField(blank=True, help_text='Active ingredients in the medication')),
                ('manufacturer', models.CharField(blank=True, help_text='Manufacturer of the medication', max_length=200)),
                ('side_effects', models.TextField(blank=True, help_text='Common side effects')),
                ('contraindications', models.TextField(blank=True, help_text='Contraindications and warnings')),
                ('storage_instructions', models.TextField(blank=True, help_text='Storage instructions for the medication')),
                ('expiration_date', models.DateField(blank=True, help_text='Expiration date of the medication', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
                'db_table': 'medications',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='medications_name_906f5e_idx'), models.Index(fields=['generic_name'], name='medications_generic_f22126_idx'), models.Index(fields=['medication_type'], name='medications_medicat_b7c491_idx'), models.Index(fields=['prescription_type'], name='medications_prescri_15ebf9_idx')],
            },
        ),
        migrations.CreateModel(
            name='MedicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_time', models.DateTimeField(help_text='When the medication was scheduled to be taken')),
                ('actual_time', models.DateTimeField(blank=True, help_text='When the medication was actually taken', null=True)),
                ('status', models.CharField(choices=[('taken', 'Taken'), ('missed', 'Missed'), ('skipped', 'Skipped'), ('partial', 'Partial Dose')], default='missed', help_text='Status of the medication dose', max_length=20)),
                ('dosage_taken', models.DecimalField(blank=True, decimal_places=2, help_text='Actual dosage taken', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('notes', models.TextField(blank=True, help_text='Notes about the medication dose')),
                ('side_effects', models.TextField(blank=True, help_text='Any side effects experienced')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medication', models.ForeignKey(help_text='Medication that was taken', on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='medications.medication')),
            ],
            options={
                'verbose_name': 'Medication Log',
                'verbose_name_plural': 'Medication Logs',
                'db_table': 'medication_logs',
                'ordering': ['-scheduled_time'],
            },
        ),
    ]
