# Generated by Django 5.2.4 on 2025-08-06 09:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import wagtail.fields
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('medications', '0023_medicationindexpage_page_description'),
        ('wagtailimages', '0027_image_description'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the active ingredient', max_length=200, unique=True)),
                ('chemical_name', models.CharField(blank=True, help_text='Chemical name of the ingredient', max_length=200)),
                ('molecular_formula', models.CharField(blank=True, help_text='Molecular formula', max_length=100)),
                ('molecular_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Molecular weight', max_digits=10, null=True)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Description of the active ingredient')),
                ('mechanism_of_action', wagtail.fields.RichTextField(blank=True, help_text='How this ingredient works')),
                ('therapeutic_class', models.CharField(blank=True, help_text='Therapeutic class of the ingredient', max_length=200)),
                ('side_effects', wagtail.fields.RichTextField(blank=True, help_text='Common side effects')),
                ('contraindications', wagtail.fields.RichTextField(blank=True, help_text='Contraindications and warnings')),
                ('interactions', wagtail.fields.RichTextField(blank=True, help_text='Drug interactions')),
                ('is_controlled_substance', models.BooleanField(default=False, help_text='Whether this is a controlled substance')),
                ('schedule', models.CharField(choices=[('none', 'Not Scheduled'), ('schedule_1', 'Schedule 1'), ('schedule_2', 'Schedule 2'), ('schedule_3', 'Schedule 3'), ('schedule_4', 'Schedule 4'), ('schedule_5', 'Schedule 5')], default='none', help_text='Drug schedule classification', max_length=20)),
            ],
            options={
                'verbose_name': 'Active Ingredient',
                'verbose_name_plural': 'Active Ingredients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DosageForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the dosage form', max_length=100, unique=True)),
                ('code', models.CharField(blank=True, help_text='Dosage form code', max_length=20, unique=True)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Description of the dosage form')),
                ('administration_method', models.CharField(blank=True, help_text='How this form is administered', max_length=200)),
                ('absorption_rate', models.CharField(blank=True, help_text='Typical absorption rate', max_length=100)),
                ('onset_of_action', models.CharField(blank=True, help_text='Typical onset of action', max_length=100)),
                ('duration_of_action', models.CharField(blank=True, help_text='Typical duration of action', max_length=100)),
                ('storage_requirements', wagtail.fields.RichTextField(blank=True, help_text='Special storage requirements')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this dosage form is active')),
            ],
            options={
                'verbose_name': 'Dosage Form',
                'verbose_name_plural': 'Dosage Forms',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='medication',
            name='image_accessibility_features',
            field=models.JSONField(default=dict, help_text='Accessibility features for the image (high contrast, color blind friendly, etc.)'),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_alt_text_auto_generated',
            field=models.BooleanField(default=False, help_text='Whether alt text was auto-generated'),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_alt_text_confidence',
            field=models.FloatField(blank=True, help_text='Confidence score for auto-generated alt text (0-1)', null=True),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_aspect_ratio',
            field=models.CharField(blank=True, help_text='Preferred aspect ratio for this image', max_length=20),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_caption',
            field=models.CharField(blank=True, help_text='Caption for the medication image', max_length=500),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_credit',
            field=models.CharField(blank=True, help_text='Image credit/attribution', max_length=200),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_focal_point_x',
            field=models.FloatField(blank=True, help_text='Focal point X coordinate (0-1)', null=True),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_focal_point_y',
            field=models.FloatField(blank=True, help_text='Focal point Y coordinate (0-1)', null=True),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_license',
            field=models.CharField(blank=True, help_text='License information for the image', max_length=100),
        ),
        migrations.AddField(
            model_name='medication',
            name='image_responsive_sizes',
            field=models.JSONField(default=list, help_text='Responsive image sizes configuration'),
        ),
        migrations.AddField(
            model_name='medication',
            name='medication_image_inhaler',
            field=models.ForeignKey(blank=True, help_text='Image of inhaler device if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medication_inhaler_images', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='medication',
            name='medication_image_injection',
            field=models.ForeignKey(blank=True, help_text='Image of injection device if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medication_injection_images', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='medication',
            name='medication_image_packaging',
            field=models.ForeignKey(blank=True, help_text='Image of medication packaging', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medication_packaging_images', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='medication',
            name='medication_image_tablet',
            field=models.ForeignKey(blank=True, help_text='Image of tablet/capsule form', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medication_tablet_images', to='wagtailimages.image'),
        ),
        migrations.AlterField(
            model_name='medication',
            name='image_metadata',
            field=models.JSONField(default=dict, help_text='Enhanced metadata about the medication image (dimensions, format, focal points, etc.)'),
        ),
        migrations.AlterField(
            model_name='medication',
            name='image_processing_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('optimized', 'Optimized'), ('responsive_ready', 'Responsive Ready')], default='pending', help_text='Status of image processing and optimization', max_length=20),
        ),
        migrations.AlterField(
            model_name='medication',
            name='medication_image',
            field=models.ForeignKey(blank=True, help_text='Primary medication image with enhanced focal point handling and responsive sizing', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medication_images', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='medication',
            name='active_ingredients_snippets',
            field=models.ManyToManyField(blank=True, help_text='Active ingredients from snippets', related_name='medications', to='medications.activeingredient'),
        ),
        migrations.AddField(
            model_name='medication',
            name='dosage_form',
            field=models.ForeignKey(blank=True, help_text='Dosage form of the medication', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medications', to='medications.dosageform'),
        ),
        migrations.CreateModel(
            name='MedicationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the medication category', max_length=200, unique=True)),
                ('code', models.CharField(blank=True, help_text='Category code/identifier', max_length=50, unique=True)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Description of the category')),
                ('icon', models.CharField(blank=True, help_text='Icon class for the category', max_length=50)),
                ('color', models.CharField(blank=True, help_text='Color code for the category (hex format)', max_length=7)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active')),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Sort order for display')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent category', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='medications.medicationcategory')),
            ],
            options={
                'verbose_name': 'Medication Category',
                'verbose_name_plural': 'Medication Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='medication',
            name='category',
            field=models.ForeignKey(blank=True, help_text='Medication category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medications', to='medications.medicationcategory'),
        ),
        migrations.CreateModel(
            name='MedicationManufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the manufacturer', max_length=200, unique=True)),
                ('code', models.CharField(blank=True, help_text='Manufacturer code/identifier', max_length=50, unique=True)),
                ('website', models.URLField(blank=True, help_text='Manufacturer website')),
                ('email', models.EmailField(blank=True, help_text='Contact email', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20)),
                ('address', models.TextField(blank=True, help_text='Manufacturer address')),
                ('country', models.CharField(blank=True, help_text='Country of origin', max_length=100)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Description of the manufacturer')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this manufacturer is active')),
                ('logo', models.ForeignKey(blank=True, help_text='Manufacturer logo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manufacturer_logos', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Medication Manufacturer',
                'verbose_name_plural': 'Medication Manufacturers',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='medication',
            name='manufacturer_snippet',
            field=models.ForeignKey(blank=True, help_text='Manufacturer information from snippet', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medications', to='medications.medicationmanufacturer'),
        ),

    ]
