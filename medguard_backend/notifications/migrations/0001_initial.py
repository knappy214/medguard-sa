# Generated by Django 5.2.4 on 2025-07-28 13:10

import django.db.models.deletion
import wagtail.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0094_alter_page_locale'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction text for the notifications page', verbose_name='Introduction')),
            ],
            options={
                'verbose_name': 'Notification Index Page',
                'verbose_name_plural': 'Notification Index Pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the notification', max_length=200, verbose_name='Title')),
                ('content', wagtail.fields.RichTextField(help_text='Content of the notification', verbose_name='Content')),
                ('notification_type', models.CharField(choices=[('system', 'System Notification'), ('medication', 'Medication Alert'), ('stock', 'Stock Alert'), ('maintenance', 'Maintenance Notice'), ('security', 'Security Alert'), ('general', 'General Announcement')], default='general', help_text='Type of notification', max_length=20, verbose_name='Notification Type')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Priority level of the notification', max_length=20, verbose_name='Priority')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive'), ('archived', 'Archived')], default='draft', help_text='Current status of the notification', max_length=20, verbose_name='Status')),
                ('target_user_types', models.JSONField(default=list, help_text='List of user types this notification targets', verbose_name='Target User Types')),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='When to send this notification (leave empty for immediate)', null=True, verbose_name='Scheduled At')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this notification expires (leave empty for no expiration)', null=True, verbose_name='Expires At')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this notification is currently active', verbose_name='Is Active')),
                ('show_on_dashboard', models.BooleanField(default=True, help_text='Whether to show this notification on the dashboard', verbose_name='Show on Dashboard')),
                ('require_acknowledgment', models.BooleanField(default=False, help_text='Whether users must acknowledge this notification', verbose_name='Require Acknowledgment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this notification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('target_users', models.ManyToManyField(blank=True, help_text='Specific users to receive this notification', to=settings.AUTH_USER_MODEL, verbose_name='Target Users')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationDetailPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('additional_info', wagtail.fields.RichTextField(blank=True, help_text='Additional information about the notification', verbose_name='Additional Information')),
                ('notification', models.OneToOneField(help_text='Associated notification record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='detail_page', to='notifications.notification', verbose_name='Notification')),
            ],
            options={
                'verbose_name': 'Notification Detail Page',
                'verbose_name_plural': 'Notification Detail Pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the notification template', max_length=200, verbose_name='Template Name')),
                ('template_type', models.CharField(choices=[('email', 'Email Template'), ('sms', 'SMS Template'), ('push', 'Push Notification Template'), ('in_app', 'In-App Notification Template')], help_text='Type of notification template', max_length=20, verbose_name='Template Type')),
                ('subject', models.CharField(blank=True, help_text='Subject line for email templates', max_length=200, verbose_name='Subject')),
                ('content', models.TextField(help_text='Template content with placeholders', verbose_name='Content')),
                ('variables', models.JSONField(default=dict, help_text='Available variables for this template', verbose_name='Variables')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is active', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this template', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_templates', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('unread', 'Unread'), ('read', 'Read'), ('acknowledged', 'Acknowledged'), ('dismissed', 'Dismissed')], default='unread', help_text='Current status of this notification for the user', max_length=20, verbose_name='Status')),
                ('sent_at', models.DateTimeField(auto_now_add=True, help_text='When this notification was sent to the user', verbose_name='Sent At')),
                ('read_at', models.DateTimeField(blank=True, help_text='When the user read this notification', null=True, verbose_name='Read At')),
                ('acknowledged_at', models.DateTimeField(blank=True, help_text='When the user acknowledged this notification', null=True, verbose_name='Acknowledged At')),
                ('dismissed_at', models.DateTimeField(blank=True, help_text='When the user dismissed this notification', null=True, verbose_name='Dismissed At')),
                ('notification', models.ForeignKey(help_text='Associated notification', on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to='notifications.notification', verbose_name='Notification')),
                ('user', models.ForeignKey(help_text='User who received this notification', on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Notification',
                'verbose_name_plural': 'User Notifications',
                'db_table': 'user_notifications',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_19df93_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority'], name='notificatio_priorit_17ee5f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['status'], name='notificatio_status_fce6f5_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['is_active'], name='notificatio_is_acti_415c61_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_at'], name='notificatio_schedul_2a5c00_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['expires_at'], name='notificatio_expires_66996e_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['template_type'], name='notificatio_templat_b63ef6_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['is_active'], name='notificatio_is_acti_f33840_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationtemplate',
            index=models.Index(fields=['name'], name='notificatio_name_a67357_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['user', 'notification'], name='user_notifi_user_id_c66c79_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['user', 'status'], name='user_notifi_user_id_647619_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['status'], name='user_notifi_status_ebba1b_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['sent_at'], name='user_notifi_sent_at_934ba1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usernotification',
            unique_together={('user', 'notification')},
        ),
    ]
